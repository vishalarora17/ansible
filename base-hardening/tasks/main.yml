---

- name: Extracting AllowGroup Infromation from Hosts
  shell: "cat /etc/ssh/sshd_config | grep ^AllowGroups | awk -F 'AllowGroups ' '{print $2}'"
  register: output

- name: Enable SSHD Configuration
  template:
    src=sshd_config.j2
    dest={{ sshd_path }}/sshd_config
    backup=yes

- name: Enable SSH Configuration
  template:
    src=ssh_config.j2
    dest={{ sshd_path }}/ssh_config
    backup=yes
  notify:
    - restart sshd

- name: Install AIDE package
  yum:
    name: aide
    state: present

- name: Checking status of aide db initialization
  stat: path=/var/lib/aide/aide.db.gz
  register: p

- name: Setting up AIDE
  command: "{{ item }}"
  when: p.stat.path is not defined
  with_items:
    - /usr/sbin/aide --init
    - cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
    - /usr/sbin/aide --check
  changed_when: false

- cron:
    name: "Aide check"
    user: "root"
    minute: "0"
    hour: "5"
    job: "/usr/sbin/aide --check"

- name: Removing telnet package
  yum:
    name: telnet
    state: absent

- name: Modifying Useradd Configuration
  lineinfile:
    path: /etc/default/useradd
    regexp: '^INACTIVE'
    line: 'INACTIVE=35'

- name: Audit Configuration modifying
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: "{{ item.name }}"
    line: "{{ item.name }} = {{ item.value }}"
    backrefs: yes
    state: present
  with_items:
    - "{{ audit_parm }}"

- name: Setting up Sysctl Configuration
  template:
    src=sysctl.conf.j2
    dest=/etc/sysctl.conf
    backup=yes

- name: Adding Auditing rules
  template:
    src=audit.rules.j2
    dest=/etc/audit/rules.d/audit.rules
    backup=yes

- name:  Update /etc/issue file
  template:
    src=issue.j2
    dest=/etc/issue
    backup=yes

- name:  Update /etc/issue.net file
  template:
    src=issue.net.j2
    dest=/etc/issue.net
    backup=yes

- name: Disable empty passwords
  replace:
    path: /etc/pam.d/system-auth
#    regexp: '(\s+)old\.host\.name(\s+.*)?$'
    regexp: '^auth(\s+)sufficient(\s+)pam_unix.so(\s+)nullok(\s+)try_first_pass(\s+)?$'
    replace: 'auth        sufficient    pam_unix.so try_first_pass'
    backup: yes

- name: Updating Pam System auth config
  replace:
    path: /etc/pam.d/system-auth
    regexp: '^password(\s+)sufficient(\s+)pam_unix.so(\s+)sha512(\s+)shadow(\s+)nullok(\s+)try_first_pass(\s+)use_authtok(\s+)?$'
    replace: 'password    sufficient    pam_unix.so remember=5 sha512 shadow nullok try_first_pass use_authtok'
    backup: yes

- name: Mount secure /tmp
  mount:
    path: /tmp
    src: /var/tmpmount
    fstype: ext4
    opts: loop,rw,noexec,nosuid,nodev
    state: present

- name: Mount tmp bind
  mount:
    path: /var/tmp
    src: /tmp
    fstype: none
    opts: bind
    state: present


- name: Mount tmpfs
  mount:
    path: /dev/shm
    src: tmpfs
    fstype: tmpfs
    opts: noexec,nosuid,nodev
    state: present

- name: delete files those are not required
  file:
     path: "{{ item }}"
     state: absent
  with_items:
     - '{{delete_files}}'

- name: Create files those are required
  file:
     path: "{{ item }}"
     state: touch
  with_items:
     - '{{create_files}}'

- name: Create directory those are required
  file:
     path: "{{ item }}"
     state: directory
  with_items:
     - '{{create_dirs}}'

- name: Set log file permissions
  file:
     path: "{{ item }}"
     state: touch
     mode: 0666
  with_items:
      - '{{ log_files }}'

- name: set umask 002 in /etc/bashrc and /etc/profile
  replace:
    path: "{{ item }}"
    regexp: '^(\s+)umask(\s+)077(\s+)?$'
    replace: '       umask 002'
    backup: yes
  with_items:
    - '{{ replace_umask }}'

- name: set umask 022 in /etc/bashrc and /etc/profile
  replace:
    path: "{{ item }}"
    regexp: '^(\s+)umask(\s+)077(\s+)?$'
    replace: '       umask 022'
    backup: yes
  with_items:
    - '{{ replace_umask }}'

- name: replace umask to 002 in specific files
  replace:
    path: "{{ item }}"
    regexp: '^umask(\s+)077(\s+)?$'
    replace: '       umask 002'
    backup: yes
  with_items:
    - '{{ files_for_umask }}'

- name: Adding umask 002 in specific files
  lineinfile:
    path: "{{ item }}"
    line: 'umask 002'
  with_items:
    - '{{ files_for_umask }}'

- name: Setting up Password Quality Configuration
  template:
    src=pwquality.conf.j2
    dest=/etc/security/pwquality.conf
    backup=yes

- name: Setting up sysconfig ntpd
  template:
    src=ntpd.j2
    dest=/etc/sysconfig/ntpd
    backup=yes

- name: Setting up ntpd configuration
  template:
    src=ntp.conf.j2
    dest=/etc/ntp.conf
    backup=yes
